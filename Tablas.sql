CREATE TABLE FIDE_PAIS_TB (
    ID_PAIS INT PRIMARY KEY,
    nombre_pais VARCHAR2(50) NOT NULL,
    creado_por VARCHAR2(100),
    fecha_creacion TIMESTAMP,
    modificado_por VARCHAR2(100),
    fecha_modificacion TIMESTAMP,
    accion varchar2(100)
    
);

CREATE TABLE FIDE_ESTADOS_TB (
    ESTADO_ID INT PRIMARY KEY,
    nombre_estado VARCHAR2(100) NOT NULL,
    descripcion VARCHAR2(1000) NOT NULL,
    creado_por VARCHAR2(100),
    fecha_creacion TIMESTAMP,
    modificado_por VARCHAR2(100),
    fecha_modificacion TIMESTAMP,
    accion varchar2(100)
);

CREATE TABLE FIDE_DESCUENTO_TB (
    DESCUENTO_ID INT PRIMARY KEY,
    descuento NUMBER(10, 2),
    beneficios_adicionales VARCHAR2(255),
    creado_por VARCHAR2(100),
    fecha_creacion TIMESTAMP,
    modificado_por VARCHAR2(100),
    fecha_modificacion TIMESTAMP,
    accion varchar2(100)
);

CREATE TABLE FIDE_RESPONSABLES_TB (
    RESPONSABLE_ID INT PRIMARY KEY,
    nombre_responsable VARCHAR2(100),
    creado_por VARCHAR2(100),
    fecha_creacion TIMESTAMP,
    modificado_por VARCHAR2(100),
    fecha_modificacion TIMESTAMP,
    accion varchar2(100)
);

CREATE TABLE FIDE_CATEGORIAS_TB (
    CATEGORIA_ID INT PRIMARY KEY,
    nombre_categoria VARCHAR2(100),
    creado_por VARCHAR2(100),
    fecha_creacion TIMESTAMP,
    modificado_por VARCHAR2(100),
    fecha_modificacion TIMESTAMP,
    accion varchar2(100)
);

CREATE TABLE FIDE_PROVINCIA_TB (
    ID_PROVINCIA INT PRIMARY KEY,
    ID_PAIS INT NOT NULL,
    nombre_provincia VARCHAR2(50) NOT NULL,
    CONSTRAINT fk_provincia_pais FOREIGN KEY (ID_PAIS) REFERENCES FIDE_PAIS_TB(ID_PAIS),
    creado_por VARCHAR2(100),
    fecha_creacion TIMESTAMP,
    modificado_por VARCHAR2(100),
    fecha_modificacion TIMESTAMP,
    accion varchar2(100)
);



CREATE TABLE FIDE_SUBCATEGORIAS_TB (
    SUBCATEGORIAS_ID INT PRIMARY KEY,
    CATEGORIA_ID INT NOT NULL,
    nombre_subcategoria VARCHAR2(100),
    CONSTRAINT fk_subcategoria_categoria FOREIGN KEY (CATEGORIA_ID) REFERENCES FIDE_CATEGORIAS_TB(CATEGORIA_ID),
    creado_por VARCHAR2(100),
    fecha_creacion TIMESTAMP,
    modificado_por VARCHAR2(100),
    fecha_modificacion TIMESTAMP,
    accion varchar2(100)
);

CREATE TABLE FIDE_CANTON_TB (
    ID_CANTON INT PRIMARY KEY,
    ID_PROVINCIA INT NOT NULL,
    nombre_canton VARCHAR2(100) NOT NULL,
    CONSTRAINT fk_canton_provincia FOREIGN KEY (ID_PROVINCIA) REFERENCES FIDE_PROVINCIA_TB(ID_PROVINCIA),
    creado_por VARCHAR2(100),
    fecha_creacion TIMESTAMP,
    modificado_por VARCHAR2(100),
    fecha_modificacion TIMESTAMP,
    accion varchar2(100)
);

CREATE TABLE FIDE_TIPO_PRODUCTOS_TB (
    TIPO_PRODUCTO_ID INT PRIMARY KEY,
    CATEGORIA_ID INT NOT NULL,
    SUBCATEGORIA_ID INT NOT NULL,
    nombre_producto VARCHAR2(100),
    precio_unitario NUMBER(12, 2),
    CONSTRAINT fk_tipo_producto_categoria FOREIGN KEY (CATEGORIA_ID) REFERENCES FIDE_CATEGORIAS_TB(CATEGORIA_ID),
    CONSTRAINT fk_tipo_producto_subcategoria FOREIGN KEY (SUBCATEGORIA_ID) REFERENCES FIDE_SUBCATEGORIAS_TB(SUBCATEGORIAS_ID),
    creado_por VARCHAR2(100),
    fecha_creacion TIMESTAMP,
    modificado_por VARCHAR2(100),
    fecha_modificacion TIMESTAMP,
    accion varchar2(100)
);

CREATE TABLE FIDE_PUESTO_TB (
    PUESTO_ID INT PRIMARY KEY,
    ESTADO_ID INT NOT NULL,
    puesto_nombre VARCHAR2(100),
    CONSTRAINT fk_puesto_estado FOREIGN KEY (ESTADO_ID) REFERENCES FIDE_ESTADOS_TB(ESTADO_ID),
    creado_por VARCHAR2(100),
    fecha_creacion TIMESTAMP,
    modificado_por VARCHAR2(100),
    fecha_modificacion TIMESTAMP,
    accion varchar2(100)
);

CREATE TABLE FIDE_DISTRITO_TB (
    ID_DISTRITO INT PRIMARY KEY,
    ID_CANTON INT NOT NULL,
    nombre_distrito VARCHAR2(100) NOT NULL,
    CONSTRAINT fk_distrito_canton FOREIGN KEY (ID_CANTON) REFERENCES FIDE_CANTON_TB(ID_CANTON),
    creado_por VARCHAR2(100),
    fecha_creacion TIMESTAMP,
    modificado_por VARCHAR2(100),
    fecha_modificacion TIMESTAMP,
    accion varchar2(100)
);

CREATE TABLE FIDE_DIRECCION_TB (
    ID_DIRECCION INT PRIMARY KEY,
    ID_DISTRITO INT NOT NULL,
    ID_CANTON INT NOT NULL,
    ID_PROVINCIA INT NOT NULL,
    ID_PAIS INT NOT NULL,
    descripcion VARCHAR2(255) NOT NULL,
    CONSTRAINT fk_direccion_distrito FOREIGN KEY (ID_DISTRITO) REFERENCES FIDE_DISTRITO_TB(ID_DISTRITO),
    CONSTRAINT fk_direccion_canton FOREIGN KEY (ID_CANTON) REFERENCES FIDE_CANTON_TB(ID_CANTON),
    CONSTRAINT fk_direccion_provincia FOREIGN KEY (ID_PROVINCIA) REFERENCES FIDE_PROVINCIA_TB(ID_PROVINCIA),
    CONSTRAINT fk_direccion_pais FOREIGN KEY (ID_PAIS) REFERENCES FIDE_PAIS_TB(ID_PAIS),
    creado_por VARCHAR2(100),
    fecha_creacion TIMESTAMP,
    modificado_por VARCHAR2(100),
    fecha_modificacion TIMESTAMP,
    accion varchar2(100)
);

CREATE TABLE FIDE_TIPO_CLIENTE_TB (
    TIPO_CLIENTE_ID INT PRIMARY KEY,
    DESCUENTO_ID INT,
    descripcion VARCHAR2(255),
    CONSTRAINT fk_tipo_cliente_descuento FOREIGN KEY (DESCUENTO_ID) REFERENCES FIDE_DESCUENTO_TB(DESCUENTO_ID),
    creado_por VARCHAR2(100),
    fecha_creacion TIMESTAMP,
    modificado_por VARCHAR2(100),
    fecha_modificacion TIMESTAMP,
    accion varchar2(100)
);

CREATE TABLE FIDE_CLIENTE_TB (
    CLIENTE_ID INT NOT NULL PRIMARY KEY,
    ID_DIRECCION INT NOT NULL,
    ESTADO_ID INT NOT NULL,
    TIPO_CLIENTE_ID INT NOT NULL,
    NOMBRE VARCHAR2(100),
    RUC NUMBER(12),
    TELEFONO VARCHAR2(15),
    EMAIL VARCHAR2(100),
        CONSTRAINT fk_direccion FOREIGN KEY (ID_DIRECCION) REFERENCES FIDE_DIRECCION_TB(ID_DIRECCION),
    CONSTRAINT fk_estado FOREIGN KEY (ESTADO_ID) REFERENCES FIDE_ESTADOS_TB(ESTADO_ID),
    CONSTRAINT fk_tipo_cliente FOREIGN KEY (TIPO_CLIENTE_ID) REFERENCES FIDE_TIPO_CLIENTE_TB(TIPO_CLIENTE_ID),
      creado_por VARCHAR2(100),
    fecha_creacion TIMESTAMP,
    modificado_por VARCHAR2(100),
    fecha_modificacion TIMESTAMP,
    accion varchar2(100)
);


CREATE TABLE FIDE_EMPLEADOS_TB (
    EMPLEADO_ID INT PRIMARY KEY,
    ID_DIRECCION INT NOT NULL,
    ESTADO_ID INT NOT NULL,
    PUESTO_ID INT NOT NULL,
    nombre VARCHAR2(100),
    apellido VARCHAR2(100),
    fecha_contratacion DATE NOT NULL,
    salario NUMBER(12, 2),
    telefono VARCHAR2(20),
    email VARCHAR2(100),
    CONSTRAINT fk_empleado_direccion FOREIGN KEY (ID_DIRECCION) REFERENCES FIDE_DIRECCION_TB(ID_DIRECCION),
    CONSTRAINT fk_empleado_estado FOREIGN KEY (ESTADO_ID) REFERENCES FIDE_ESTADOS_TB(ESTADO_ID),
    CONSTRAINT fk_empleado_puesto FOREIGN KEY (PUESTO_ID) REFERENCES FIDE_PUESTO_TB(PUESTO_ID),
    creado_por VARCHAR2(100),
    fecha_creacion TIMESTAMP,
    modificado_por VARCHAR2(100),
    fecha_modificacion TIMESTAMP,
    accion varchar2(100)
)PARTITION BY HASH(EMPLEADO_ID)
    PARTITIONS 20;
    

CREATE TABLE FIDE_ENTIDAD_EMISORA_TB (
    ENTIDAD_EMISORA_ID INT PRIMARY KEY,
    ESTADO_ID INT NOT NULL,
    ID_DIRECCION INT NOT NULL,
    nombre VARCHAR2(100),
    telefono VARCHAR2(20),
    email VARCHAR2(100),
    CONSTRAINT fk_entidad_estado FOREIGN KEY (ESTADO_ID) REFERENCES FIDE_ESTADOS_TB(ESTADO_ID),
    CONSTRAINT fk_entidad_direccion FOREIGN KEY (ID_DIRECCION) REFERENCES FIDE_DIRECCION_TB(ID_DIRECCION),
    creado_por VARCHAR2(100),
    fecha_creacion TIMESTAMP,
    modificado_por VARCHAR2(100),
    fecha_modificacion TIMESTAMP,
    accion varchar2(100)
);

CREATE TABLE FIDE_PRESUPUESTO_TB (
    PRESUPUESTO_ID INT PRIMARY KEY,
    CATEGORIA_ID INT,
    SUBCATEGORIA_ID INT,
    descripcion VARCHAR2(255),
    cantidad NUMBER,
    unidad_medida VARCHAR2(50),
    precio_unitario NUMBER(12, 2),
    CONSTRAINT fk_presupuesto_categoria FOREIGN KEY (CATEGORIA_ID) REFERENCES FIDE_CATEGORIAS_TB(CATEGORIA_ID),
    CONSTRAINT fk_presupuesto_subcategoria FOREIGN KEY (SUBCATEGORIA_ID) REFERENCES FIDE_SUBCATEGORIAS_TB(SUBCATEGORIAS_ID),
    creado_por VARCHAR2(100),
    fecha_creacion TIMESTAMP,
    modificado_por VARCHAR2(100),
    fecha_modificacion TIMESTAMP,
    accion varchar2(100)
);


CREATE TABLE FIDE_PROYECTOS_TB (
    PROYECTO_ID INT PRIMARY KEY,
    PRESUPUESTO_ID INT NOT NULL,
    ESTADO_ID INT NOT NULL,
    RESPONSABLE_ID INT NOT NULL,
    nombre VARCHAR2(100),
    fecha_inicio DATE NOT NULL,
    fecha_fin DATE NOT NULL,
    descripcion VARCHAR2(500),
    CONSTRAINT fk_proyecto_presupuesto FOREIGN KEY (PRESUPUESTO_ID) REFERENCES FIDE_PRESUPUESTO_TB(PRESUPUESTO_ID),
    CONSTRAINT fk_proyecto_estado FOREIGN KEY (ESTADO_ID) REFERENCES FIDE_ESTADOS_TB(ESTADO_ID),
    CONSTRAINT fk_proyecto_responsable FOREIGN KEY (RESPONSABLE_ID) REFERENCES FIDE_RESPONSABLES_TB(RESPONSABLE_ID),
    creado_por VARCHAR2(100),
    fecha_creacion TIMESTAMP,
    modificado_por VARCHAR2(100),
    fecha_modificacion TIMESTAMP,
    accion varchar2(100)
);


CREATE TABLE FIDE_ASIGNACIONES_TB (
    ASIGNACION_ID INT PRIMARY KEY,
    PROYECTO_ID INT NOT NULL,
    EMPLEADO_ID INT NOT NULL,
    fecha_inicio DATE NOT NULL,
    fecha_fin DATE NOT NULL,
    rol_en_proyecto VARCHAR2(100),
    CONSTRAINT fk_asignacion_proyecto FOREIGN KEY (PROYECTO_ID) REFERENCES FIDE_PROYECTOS_TB(PROYECTO_ID),
    CONSTRAINT fk_asignacion_empleado FOREIGN KEY (EMPLEADO_ID) REFERENCES FIDE_EMPLEADOS_TB(EMPLEADO_ID),
    creado_por VARCHAR2(100),
    fecha_creacion TIMESTAMP,
    modificado_por VARCHAR2(100),
    fecha_modificacion TIMESTAMP,
    accion varchar2(100)
);

CREATE TABLE FIDE_PROVEEDORES_TB (
    PROVEEDOR_ID INT PRIMARY KEY,
    ESTADO_ID INT NOT NULL,
    ID_DIRECCION INT NOT NULL,
    nombre_empresa VARCHAR2(100) NOT NULL,
    ruc NUMBER(12) NOT NULL,
    contacto_nombre VARCHAR2(100),
    telefono VARCHAR2(20),
    email VARCHAR2(100),
    tipo_producto VARCHAR2(100),
    CONSTRAINT fk_proveedor_estado FOREIGN KEY (ESTADO_ID) REFERENCES FIDE_ESTADOS_TB(ESTADO_ID),
    CONSTRAINT fk_proveedor_direccion FOREIGN KEY (ID_DIRECCION) REFERENCES FIDE_DIRECCION_TB(ID_DIRECCION),
    creado_por VARCHAR2(100),
    fecha_creacion TIMESTAMP,
    modificado_por VARCHAR2(100),
    fecha_modificacion TIMESTAMP,
    accion varchar2(100)
);

CREATE TABLE FIDE_MATERIALES_TB (
    MATERIAL_ID INT PRIMARY KEY,
    PROVEEDOR_ID INT NOT NULL,
    nombre VARCHAR2(100) NOT NULL,
    descripcion VARCHAR2(255),
    unidad_medida VARCHAR2(50),
    precio_unitario NUMBER(12, 2) NOT NULL,
    stock_actual INT NOT NULL,
    CONSTRAINT fk_material_proveedor FOREIGN KEY (PROVEEDOR_ID) REFERENCES FIDE_PROVEEDORES_TB(PROVEEDOR_ID),
    creado_por VARCHAR2(100),
    fecha_creacion TIMESTAMP,
    modificado_por VARCHAR2(100),
    fecha_modificacion TIMESTAMP,
    accion varchar2(100)
);

CREATE TABLE FIDE_COMPRA_MATERIALES_TB (
    ENTIDAD_EMISORA_ID INT NOT NULL,
    MATERIAL_ID INT NOT NULL,
    PROYECTO_ID INT NOT NULL,
    ESTADO_ID INT NOT NULL,
    cantidad NUMBER,
    precio_total NUMBER(12, 2),
    fecha_compra DATE NOT NULL,
    fecha_entrega DATE NOT NULL,
    CONSTRAINT fk_compra_entidad FOREIGN KEY (ENTIDAD_EMISORA_ID) REFERENCES FIDE_ENTIDAD_EMISORA_TB(ENTIDAD_EMISORA_ID),
    CONSTRAINT fk_compra_material FOREIGN KEY (MATERIAL_ID) REFERENCES FIDE_MATERIALES_TB(MATERIAL_ID),
    CONSTRAINT fk_compra_proyecto FOREIGN KEY (PROYECTO_ID) REFERENCES FIDE_PROYECTOS_TB(PROYECTO_ID),
    CONSTRAINT fk_compra_estado FOREIGN KEY (ESTADO_ID) REFERENCES FIDE_ESTADOS_TB(ESTADO_ID),
    creado_por VARCHAR2(100),
    fecha_creacion TIMESTAMP,
    modificado_por VARCHAR2(100),
    fecha_modificacion TIMESTAMP,
    accion varchar2(100)
);


CREATE TABLE FIDE_GARANTIAS_TB (
    GARANTIA_ID INT PRIMARY KEY,
    PROYECTO_ID INT NOT NULL,
    ESTADO_ID INT NOT NULL,
    ENTIDAD_EMISORA_ID INT NOT NULL,
    tipo_garantia VARCHAR2(100),
    monto NUMBER(12, 2),
    fecha_emision DATE NOT NULL,
    fecha_vencimiento DATE NOT NULL,
    observacion VARCHAR2(255),
    CONSTRAINT fk_garantia_proyecto FOREIGN KEY (PROYECTO_ID) REFERENCES FIDE_PROYECTOS_TB(PROYECTO_ID),
    CONSTRAINT fk_garantia_estado FOREIGN KEY (ESTADO_ID) REFERENCES FIDE_ESTADOS_TB(ESTADO_ID),
    CONSTRAINT fk_garantia_entidad FOREIGN KEY (ENTIDAD_EMISORA_ID) REFERENCES FIDE_ENTIDAD_EMISORA_TB(ENTIDAD_EMISORA_ID),
    creado_por VARCHAR2(100),
    fecha_creacion TIMESTAMP,
    modificado_por VARCHAR2(100),
    fecha_modificacion TIMESTAMP,
    accion varchar2(100)
);

CREATE TABLE FIDE_MAQUINARIA_TB (
    MAQUINARIA_ID INT PRIMARY KEY,
    ESTADO_ID INT NOT NULL,
    nombre VARCHAR2(100) NOT NULL,
    modelo VARCHAR2(100),
    año_fabricacion INT,
    fecha_ultima_mantenimiento DATE NOT NULL,
    costo_hora NUMBER(12, 2),
    disponibilidad VARCHAR2(20),
    CONSTRAINT fk_maquinaria_estado FOREIGN KEY (ESTADO_ID) REFERENCES FIDE_ESTADOS_TB(ESTADO_ID),
    creado_por VARCHAR2(100),
    fecha_creacion TIMESTAMP,
    modificado_por VARCHAR2(100),
    fecha_modificacion TIMESTAMP,
    accion varchar2(100)
);


CREATE TABLE FIDE_MANTENIMIENTO_TB (
    MANTENIMIENTO_ID INT PRIMARY KEY,
    ESTADO_ID INT NOT NULL,
    RESPONSABLE_ID INT NOT NULL,
    MAQUINARIA_ID INT NOT NULL,
    tipo_mantenimiento VARCHAR2(100),
    fecha_mantenimiento DATE NOT NULL,
    costo NUMBER(12, 2),
    descripcion_trabajo VARCHAR2(255),
    proximo_mantenimiento DATE NOT NULL,
    CONSTRAINT fk_mantenimiento_estado FOREIGN KEY (ESTADO_ID) REFERENCES FIDE_ESTADOS_TB(ESTADO_ID),
    CONSTRAINT fk_mantenimiento_responsable FOREIGN KEY (RESPONSABLE_ID) REFERENCES FIDE_RESPONSABLES_TB(RESPONSABLE_ID),
    CONSTRAINT fk_mantenimiento_maquinaria FOREIGN KEY (MAQUINARIA_ID) REFERENCES FIDE_MAQUINARIA_TB(MAQUINARIA_ID),
    creado_por VARCHAR2(100),
    fecha_creacion TIMESTAMP,
    modificado_por VARCHAR2(100),
    fecha_modificacion TIMESTAMP,
    accion varchar2(100)
);

CREATE TABLE FIDE_PAGOS_TB (
    PAGO_ID INT PRIMARY KEY,
    PRESUPUESTO_ID INT NOT NULL,
    RESPONSABLE_ID INT NOT NULL,
    nombre VARCHAR2(100),
    fecha_pago DATE NOT NULL,
    monto NUMBER(12, 2),
    numero_factura VARCHAR2(50),
    estado_pago VARCHAR2(20),
    fecha_vencimiento DATE NOT NULL,
    CONSTRAINT fk_pago_presupuesto FOREIGN KEY (PRESUPUESTO_ID) REFERENCES FIDE_PRESUPUESTO_TB(PRESUPUESTO_ID),
    CONSTRAINT fk_pago_responsable FOREIGN KEY (RESPONSABLE_ID) REFERENCES FIDE_RESPONSABLES_TB(RESPONSABLE_ID),
    creado_por VARCHAR2(100),
    fecha_creacion TIMESTAMP,
    modificado_por VARCHAR2(100),
    fecha_modificacion TIMESTAMP,
    accion varchar2(100)
);


--Triggers para los ids
CREATE SEQUENCE FIDE_ESTADO_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE FIDE_EMPLEADOS_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE FIDE_PUESTO_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE FIDE_MATERIALES_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE FIDE_CLIENTE_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE FIDE_TIPO_CLIENTE_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE FIDE_PROVEEDORES_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE FIDE_MAQUINARIA_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE FIDE_ASIGNACIONES_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE FIDE_COMPRA_MATERIALES_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE FIDE_MANTENIMIENTO_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE FIDE_PRESUPUESTO_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE FIDE_GARANTIAS_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE FIDE_ENTIDAD_EMISORA_SEQ
START WITH 1
INCREMENT BY 1;


CREATE SEQUENCE FIDE_RESPONSABLES_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE FIDE_PROYECTOS_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE FIDE_PAGOS_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE FIDE_DIRECCION_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE FIDE_DISTRITO_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE FIDE_CANTON_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE FIDE_PROVINCIA_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE FIDE_PAIS_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE FIDE_DESCUENTO_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE FIDE_CATEGORIAS_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE FIDE_SUBCATEGORIAS_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE FIDE_TIPO_PRODUCTOS_SEQ
START WITH 1
INCREMENT BY 1;

-------------------------------------------------
CREATE OR REPLACE TRIGGER FIDE_ESTADO_ID_TRG
BEFORE INSERT ON FIDE_ESTADOS_TB
FOR EACH ROW
BEGIN
    :NEW.ESTADO_ID := FIDE_ESTADO_SEQ.NEXTVAL;
END;
/
CREATE OR REPLACE TRIGGER FIDE_EMPLEADOS_ID_TRG
BEFORE INSERT ON FIDE_EMPLEADOS_TB
FOR EACH ROW
BEGIN
    :NEW.EMPLEADO_ID := FIDE_EMPLEADOS_SEQ.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER FIDE_PUESTO_ID_TRG
BEFORE INSERT ON FIDE_PUESTO_TB
FOR EACH ROW
BEGIN
    :NEW.PUESTO_ID := FIDE_PUESTO_SEQ.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER FIDE_MATERIALES_ID_TRG
BEFORE INSERT ON FIDE_MATERIALES_TB
FOR EACH ROW
BEGIN
    :NEW.MATERIAL_ID := FIDE_MATERIALES_SEQ.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER FIDE_CLIENTE_ID_TRG
BEFORE INSERT ON FIDE_CLIENTE_TB
FOR EACH ROW
BEGIN
    :NEW.CLIENTE_ID := FIDE_CLIENTE_SEQ.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER FIDE_TIPO_CLIENTE_ID_TRG
BEFORE INSERT ON FIDE_TIPO_CLIENTE_TB
FOR EACH ROW
BEGIN
    :NEW.TIPO_CLIENTE_ID := FIDE_TIPO_CLIENTE_SEQ.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER FIDE_PROVEEDORES_ID_TRG
BEFORE INSERT ON FIDE_PROVEEDORES_TB
FOR EACH ROW
BEGIN
    :NEW.PROVEEDOR_ID := FIDE_PROVEEDORES_SEQ.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER FIDE_MAQUINARIA_ID_TRG
BEFORE INSERT ON FIDE_MAQUINARIA_TB
FOR EACH ROW
BEGIN
    :NEW.MAQUINARIA_ID := FIDE_MAQUINARIA_SEQ.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER FIDE_ASIGNACIONES_ID_TRG
BEFORE INSERT ON FIDE_ASIGNACIONES_TB
FOR EACH ROW
BEGIN
    :NEW.ASIGNACION_ID := FIDE_ASIGNACIONES_SEQ.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER FIDE_COMPRA_MATERIALES_ID_TRG
BEFORE INSERT ON FIDE_COMPRA_MATERIALES_TB
FOR EACH ROW
BEGIN
    :NEW.ENTIDAD_EMISORA_ID := FIDE_COMPRA_MATERIALES_SEQ.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER FIDE_MANTENIMIENTO_ID_TRG
BEFORE INSERT ON FIDE_MANTENIMIENTO_TB
FOR EACH ROW
BEGIN
    :NEW.MANTENIMIENTO_ID := FIDE_MANTENIMIENTO_SEQ.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER FIDE_PRESUPUESTO_ID_TRG
BEFORE INSERT ON FIDE_PRESUPUESTO_TB
FOR EACH ROW
BEGIN
    :NEW.PRESUPUESTO_ID := FIDE_PRESUPUESTO_SEQ.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER FIDE_GARANTIAS_ID_TRG
BEFORE INSERT ON FIDE_GARANTIAS_TB
FOR EACH ROW
BEGIN
    :NEW.GARANTIA_ID := FIDE_GARANTIAS_SEQ.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER FIDE_ENTIDAD_EMISORA_ID_TRG
BEFORE INSERT ON FIDE_ENTIDAD_EMISORA_TB
FOR EACH ROW
BEGIN
    :NEW.ENTIDAD_EMISORA_ID := FIDE_ENTIDAD_EMISORA_SEQ.NEXTVAL;
END;

/

CREATE OR REPLACE TRIGGER FIDE_RESPONSABLES_ID_TRG
BEFORE INSERT ON FIDE_RESPONSABLES_TB
FOR EACH ROW
BEGIN
    :NEW.RESPONSABLE_ID := FIDE_RESPONSABLES_SEQ.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER FIDE_PROYECTOS_ID_TRG
BEFORE INSERT ON FIDE_PROYECTOS_TB
FOR EACH ROW
BEGIN
    :NEW.PROYECTO_ID := FIDE_PROYECTOS_SEQ.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER FIDE_PAGOS_ID_TRG
BEFORE INSERT ON FIDE_PAGOS_TB
FOR EACH ROW
BEGIN
    :NEW.PAGO_ID := FIDE_PAGOS_SEQ.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER FIDE_DIRECCION_ID_TRG
BEFORE INSERT ON FIDE_DIRECCION_TB
FOR EACH ROW
BEGIN
    :NEW.ID_DIRECCION := FIDE_DIRECCION_SEQ.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER FIDE_DISTRITO_ID_TRG
BEFORE INSERT ON FIDE_DISTRITO_TB
FOR EACH ROW
BEGIN
    :NEW.ID_DISTRITO := FIDE_DISTRITO_SEQ.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER FIDE_CANTON_ID_TRG
BEFORE INSERT ON FIDE_CANTON_TB
FOR EACH ROW
BEGIN
    :NEW.ID_CANTON := FIDE_CANTON_SEQ.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER FIDE_PROVINCIA_ID_TRG
BEFORE INSERT ON FIDE_PROVINCIA_TB
FOR EACH ROW
BEGIN
    :NEW.ID_PROVINCIA := FIDE_PROVINCIA_SEQ.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER FIDE_PAIS_ID_TRG
BEFORE INSERT ON FIDE_PAIS_TB
FOR EACH ROW
BEGIN
    :NEW.ID_PAIS := FIDE_PAIS_SEQ.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER FIDE_DESCUENTO_ID_TRG
BEFORE INSERT ON FIDE_DESCUENTO_TB
FOR EACH ROW
BEGIN
    :NEW.DESCUENTO_ID := FIDE_DESCUENTO_SEQ.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER FIDE_CATEGORIAS_ID_TRG
BEFORE INSERT ON FIDE_CATEGORIAS_TB
FOR EACH ROW
BEGIN
    :NEW.CATEGORIA_ID := FIDE_CATEGORIAS_SEQ.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER FIDE_SUBCATEGORIAS_ID_TRG
BEFORE INSERT ON FIDE_SUBCATEGORIAS_TB
FOR EACH ROW
BEGIN
    :NEW.SUBCATEGORIAS_ID := FIDE_SUBCATEGORIAS_SEQ.NEXTVAL;
END;
/
  
CREATE OR REPLACE TRIGGER FIDE_TIPO_PRODUCTOS_ID_TRG
BEFORE INSERT ON FIDE_TIPO_PRODUCTOS_TB
FOR EACH ROW
BEGIN
    :NEW.TIPO_PRODUCTO_ID := FIDE_TIPO_PRODUCTOS_SEQ.NEXTVAL;
 END;
/


--Triggers de auditoria

-- Trigger para la tabla FIDE_DESCUENTO_TB
CREATE OR REPLACE TRIGGER FIDE_DESCUENTO_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_DESCUENTO_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO_POR := USER;
    ELSE
        :NEW.MODIFICADO_POR := USER;
    END IF;
END;
/
CREATE OR REPLACE TRIGGER FIDE_DESCUENTO_FECHA_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_DESCUENTO_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_DESCUENTO__ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_DESCUENTO_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'INSERT';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/
-- Trigger para la tabla FIDE_CATEGORIA_TB
CREATE OR REPLACE TRIGGER FIDE_CATEGORIA_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_CATEGORIAS_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO_POR := USER;
    ELSE
        :NEW.MODIFICADO_POR := USER;
    END IF;
END;
/
CREATE OR REPLACE TRIGGER FIDE_CATEGORIA_FECHA_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_CATEGORIAS_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_CATEGORIA_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_CATEGORIAS_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'INSERT';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'UPDATE';
    END IF;
END;

/
-- Trigger para la tabla FIDE_ESTADOS_TB
CREATE OR REPLACE TRIGGER FIDE_ESTADOS_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_ESTADOS_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO_POR := USER;
    ELSE
        :NEW.MODIFICADO_POR := USER;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_ESTADOS_FECHA_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_ESTADOS_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_ESTADOS_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_ESTADOS_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'INSERT';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/


-- Trigger para la tabla FIDE_EMPLEADOS_TB
CREATE OR REPLACE TRIGGER FIDE_EMPLEADOS_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_EMPLEADOS_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO_POR := USER;
    ELSE
        :NEW.MODIFICADO_POR := USER;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_EMPLEADOS_FECHA_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_EMPLEADOS_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_EMPLEADOS_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_EMPLEADOS_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'INSERT';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- Trigger para la tabla FIDE_PUESTO_TB
CREATE OR REPLACE TRIGGER FIDE_PUESTO_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_PUESTO_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO_POR := USER;
    ELSE
        :NEW.MODIFICADO_POR := USER;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_PUESTO_FECHA_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_PUESTO_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_PUESTO_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_PUESTO_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'INSERT';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- Trigger para la tabla FIDE_MATERIALES_TB
CREATE OR REPLACE TRIGGER FIDE_MATERIALES_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_MATERIALES_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO_POR := USER;
    ELSE
        :NEW.MODIFICADO_POR := USER;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_MATERIALES_FECHA_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_MATERIALES_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_MATERIALES_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_MATERIALES_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'INSERT';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- Trigger para la tabla FIDE_CLIENTE_TB
CREATE OR REPLACE TRIGGER FIDE_CLIENTE_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_CLIENTE_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO_POR := USER;
    ELSE
        :NEW.MODIFICADO_POR := USER;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_CLIENTE_FECHA_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_CLIENTE_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_CLIENTE_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_CLIENTE_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'INSERT';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- Trigger para la tabla FIDE_TIPO_CLIENTE_TB
CREATE OR REPLACE TRIGGER FIDE_TIPO_CLIENTE_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_TIPO_CLIENTE_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO_POR := USER;
    ELSE
        :NEW.MODIFICADO_POR := USER;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_TIPO_CLIENTE_FECHA_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_TIPO_CLIENTE_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_TIPO_CLIENTE_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_TIPO_CLIENTE_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'INSERT';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- Trigger para la tabla FIDE_PROVEEDORES_TB
CREATE OR REPLACE TRIGGER FIDE_PROVEEDORES_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_PROVEEDORES_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO_POR := USER;
    ELSE
        :NEW.MODIFICADO_POR := USER;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_PROVEEDORES_FECHA_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_PROVEEDORES_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_PROVEEDORES_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_PROVEEDORES_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'INSERT';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- Trigger para la tabla FIDE_MAQUINARIA_TB
CREATE OR REPLACE TRIGGER FIDE_MAQUINARIA_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_MAQUINARIA_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO_POR := USER;
    ELSE
        :NEW.MODIFICADO_POR := USER;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_MAQUINARIA_FECHA_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_MAQUINARIA_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_MAQUINARIA_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_MAQUINARIA_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'INSERT';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- Trigger para la tabla FIDE_ASIGNACIONES_TB
CREATE OR REPLACE TRIGGER FIDE_ASIGNACIONES_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_ASIGNACIONES_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO_POR := USER;
    ELSE
        :NEW.MODIFICADO_POR := USER;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_ASIGNACIONES_FECHA_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_ASIGNACIONES_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_ASIGNACIONES_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_ASIGNACIONES_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'INSERT';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- Trigger para la tabla FIDE_COMPRA_MATERIALES_TB
CREATE OR REPLACE TRIGGER FIDE_COMPRA_MATERIALES_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_COMPRA_MATERIALES_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO_POR := USER;
    ELSE
        :NEW.MODIFICADO_POR := USER;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_COMPRA_MATERIALES_FECHA_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_COMPRA_MATERIALES_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_COMPRA_MATERIALES_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_COMPRA_MATERIALES_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'INSERT';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- Trigger para la tabla FIDE_MANTENIMIENTO_TB
CREATE OR REPLACE TRIGGER FIDE_MANTENIMIENTO_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_MANTENIMIENTO_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO_POR := USER;
    ELSE
        :NEW.MODIFICADO_POR := USER;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_MANTENIMIENTO_FECHA_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_MANTENIMIENTO_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_MANTENIMIENTO_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_MANTENIMIENTO_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'INSERT';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- Trigger para la tabla FIDE_PRESUPUESTO_TB
CREATE OR REPLACE TRIGGER FIDE_PRESUPUESTO_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_PRESUPUESTO_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO_POR := USER;
    ELSE
        :NEW.MODIFICADO_POR := USER;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_PRESUPUESTO_FECHA_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_PRESUPUESTO_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_PRESUPUESTO_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_PRESUPUESTO_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'INSERT';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- Trigger para la tabla FIDE_GARANTIAS_TB
CREATE OR REPLACE TRIGGER FIDE_GARANTIAS_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_GARANTIAS_TB
FOR EACH ROW
BEGIN
 IF INSERTING THEN
        :NEW.CREADO_POR := USER;
    ELSE
        :NEW.MODIFICADO_POR := USER;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_GARANTIAS_FECHA_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_GARANTIAS_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_GARANTIAS_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_GARANTIAS_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'INSERT';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- Trigger para la tabla FIDE_ENTIDAD_EMISORA_TB
CREATE OR REPLACE TRIGGER FIDE_ENTIDAD_EMISORA_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_ENTIDAD_EMISORA_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO_POR := USER;
    ELSE
        :NEW.MODIFICADO_POR := USER;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_ENTIDAD_EMISORA_FECHA_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_ENTIDAD_EMISORA_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_ENTIDAD_EMISORA_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_ENTIDAD_EMISORA_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'INSERT';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/


-- Trigger para la tabla FIDE_RESPONSABLES_TB
CREATE OR REPLACE TRIGGER FIDE_RESPONSABLES_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_RESPONSABLES_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO_POR := USER;
    ELSE
        :NEW.MODIFICADO_POR := USER;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_RESPONSABLES_FECHA_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_RESPONSABLES_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_RESPONSABLES_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_RESPONSABLES_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'INSERT';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'UPDATE' ;
        END IF;
END;
/

-- Trigger para la tabla FIDE_PROYECTOS_TB
CREATE OR REPLACE TRIGGER FIDE_PROYECTOS_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_PROYECTOS_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO_POR := USER;
    ELSE
        :NEW.MODIFICADO_POR := USER;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_PROYECTOS_FECHA_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_PROYECTOS_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_PROYECTOS_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_PROYECTOS_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'INSERT';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- Trigger para la tabla FIDE_PAGOS_TB
CREATE OR REPLACE TRIGGER FIDE_PAGOS_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_PAGOS_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO_POR := USER;
    ELSE
        :NEW.MODIFICADO_POR := USER;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_PAGOS_FECHA_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_PAGOS_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_PAGOS_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_PAGOS_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'INSERT';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- Trigger para la tabla FIDE_DIRECCION_TB
CREATE OR REPLACE TRIGGER FIDE_DIRECCION_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_DIRECCION_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO_POR := USER;
    ELSE
        :NEW.MODIFICADO_POR := USER;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_DIRECCION_FECHA_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_DIRECCION_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_DIRECCION_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_DIRECCION_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'INSERT';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- Trigger para la tabla FIDE_DISTRITO_TB
CREATE OR REPLACE TRIGGER FIDE_DISTRITO_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_DISTRITO_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO_POR := USER;
    ELSE
        :NEW.MODIFICADO_POR := USER;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_DISTRITO_FECHA_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_DISTRITO_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_DISTRITO_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_DISTRITO_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'INSERT';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- Trigger para la tabla FIDE_CANTON_TB
CREATE OR REPLACE TRIGGER FIDE_CANTON_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_CANTON_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO_POR := USER;
    ELSE
        :NEW.MODIFICADO_POR := USER;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_CANTON_FECHA_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_CANTON_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_CANTON_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_CANTON_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'INSERT';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- Trigger para la tabla FIDE_PROVINCIA_TB
CREATE OR REPLACE TRIGGER FIDE_PROVINCIA_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_PROVINCIA_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO_POR := USER;
    ELSE
        :NEW.MODIFICADO_POR := USER;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_PROVINCIA_FECHA_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_PROVINCIA_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_PROVINCIA_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_PROVINCIA_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'INSERT';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- Trigger para la tabla FIDE_PAIS_TB
CREATE OR REPLACE TRIGGER FIDE_PAIS_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_PAIS_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO_POR := USER;
    ELSE
        :NEW.MODIFICADO_POR := USER;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_PAIS_FECHA_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_PAIS_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_PAIS_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_PAIS_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'INSERT';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/

-- Trigger para la tabla FIDE_SUBCATEGORIAS_TB
CREATE OR REPLACE TRIGGER FIDE_SUBCATEGORIAS_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_SUBCATEGORIAS_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO_POR := USER;
    ELSE
        :NEW.MODIFICADO_POR := USER;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_SUBCATEGORIAS_FECHA_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_SUBCATEGORIAS_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_SUBCATEGORIAS_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_SUBCATEGORIAS_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'INSERT';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/
-- Trigger para la tabla FIDE_TIPO_PRODUCTOS_TB
CREATE OR REPLACE TRIGGER FIDE_TIPO_PRODUCTOS_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_TIPO_PRODUCTOS_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.CREADO_POR := USER;
    ELSE
        :NEW.MODIFICADO_POR := USER;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_TIPO_PRODUCTOS_FECHA_CREADO_MODIFICADO_POR_TRG
BEFORE INSERT OR UPDATE ON FIDE_TIPO_PRODUCTOS_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.FECHA_CREACION := SYSTIMESTAMP;
    ELSE
        :NEW.FECHA_MODIFICACION := SYSTIMESTAMP;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER FIDE_TIPO_PRODUCTOS_ACCION_TRG
BEFORE INSERT OR UPDATE ON FIDE_TIPO_PRODUCTOS_TB
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        :NEW.ACCION := 'INSERT';
    ELSIF UPDATING THEN
        :NEW.ACCION := 'UPDATE';
    END IF;
END;
/


--Auditorias
AUDIT ALL ON FIDE_EMPLEADOS_TB BY ACCESS;
AUDIT ALL ON FIDE_PUESTO_TB BY ACCESS;
AUDIT ALL ON FIDE_MATERIALES_TB BY ACCESS;
AUDIT ALL ON FIDE_CLIENTE_TB BY ACCESS;
AUDIT ALL ON FIDE_TIPO_CLIENTE_TB BY ACCESS;
AUDIT ALL ON FIDE_PROVEEDORES_TB BY ACCESS;
AUDIT ALL ON FIDE_MAQUINARIA_TB BY ACCESS;
AUDIT ALL ON FIDE_ASIGNACIONES_TB BY ACCESS;
AUDIT ALL ON FIDE_COMPRA_MATERIALES_TB BY ACCESS;
AUDIT ALL ON FIDE_MANTENIMIENTO_TB BY ACCESS;
AUDIT ALL ON FIDE_PRESUPUESTO_TB BY ACCESS;
AUDIT ALL ON FIDE_GARANTIAS_TB BY ACCESS;
AUDIT ALL ON FIDE_ENTIDAD_EMISORA_TB BY ACCESS;
AUDIT ALL ON FIDE_RESPONSABLES_TB BY ACCESS;
AUDIT ALL ON FIDE_PROYECTOS_TB BY ACCESS;
AUDIT ALL ON FIDE_ESTADOS_TB BY ACCESS;
AUDIT ALL ON FIDE_PAGOS_TB BY ACCESS;
AUDIT ALL ON FIDE_DIRECCION_TB BY ACCESS;
AUDIT ALL ON FIDE_DISTRITO_TB BY ACCESS;
AUDIT ALL ON FIDE_CANTON_TB BY ACCESS;
AUDIT ALL ON FIDE_PROVINCIA_TB BY ACCESS;
AUDIT ALL ON FIDE_PAIS_TB BY ACCESS;
AUDIT ALL ON FIDE_DESCUENTO_TB BY ACCESS;
AUDIT ALL ON FIDE_CATEGORIAS_TB BY ACCESS;
AUDIT ALL ON FIDE_SUBCATEGORIAS_TB BY ACCESS;
AUDIT ALL ON FIDE_TIPO_PRODUCTOS_TB BY ACCESS;
